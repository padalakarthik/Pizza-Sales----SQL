--  1. Retrieve total no.of orders.

SELECT 
    COUNT(order_id) AS total_orders
FROM
    orders;

--   2. calc the total revenue generated by pizza sales.

SELECT 
    ROUND(SUM(o.quantity * p.price), 2) AS total_revenue
FROM
    order_details o
        JOIN
    pizzas p ON o.pizza_id = p.pizza_id;

--   3. identify highest priced pizza.

SELECT 
    pt.name, p.price
FROM
    pizza_types pt
        JOIN
    pizzas p ON pt.pizza_type_id = p.pizza_type_id
ORDER BY p.price DESC
LIMIT 1;


--   4. identify the most common pizza size ordered.

SELECT 
    p.size, COUNT(od.order_details_id)
FROM
    pizzas p
        JOIN
    order_details od ON p.pizza_id = od.pizza_id
GROUP BY p.size
ORDER BY COUNT(od.order_details_id) DESC
LIMIT 1;

-- 5. list the top 5 most ordered pizza types along with their quantities.

SELECT 
    pt.name, SUM(od.quantity)
FROM
    pizza_types pt
        JOIN
    pizzas p ON pt.pizza_type_id = p.pizza_type_id
        JOIN
    order_details od ON p.pizza_id = od.pizza_id
GROUP BY pt.name
ORDER BY SUM(od.quantity) DESC
LIMIT 5;


--    6. join the neccesary tables to find the total quntity of each pizza category ordered

SELECT 
    pt.category, SUM(od.quantity)
FROM
    pizza_types pt
        JOIN
    pizzas p ON pt.pizza_type_id = p.pizza_type_id
        JOIN
    order_details od ON p.pizza_id = od.pizza_id
GROUP BY pt.category;




-- 7. determine the distribution of orders by houre of the day.

SELECT 
    HOUR(order_time), COUNT(order_id)
FROM
    orders
GROUP BY HOUR(order_time);




--    8. join the neccesary tables to find the category wise distribution of pizzas.

SELECT 
    category, COUNT(name)
FROM
    pizza_types
GROUP BY category;


--    9. group the orders by date and calc the avg no.of pizzas ordered per day.

SELECT 
    DAY(order_date), AVG(order_id)
FROM
    orders
GROUP BY DAY(order_date);




--    10. determine the top 3 most ordered pizza types based on revenue.

SELECT 
    pt.name, SUM(od.quantity * p.price)
FROM
    pizza_types pt
        JOIN
    pizzas p ON pt.pizza_type_id = p.pizza_type_id
        JOIN
    order_details od ON p.pizza_id = od.pizza_id
GROUP BY pt.name
ORDER BY SUM(od.quantity * p.price) DESC
LIMIT 3;




--       11. calc the percentage contribution of each pizza type to total revenue.

SELECT 
    pt.name,
    ROUND(SUM(od.quantity * p.price) / (SELECT 
                    ROUND(SUM(o.quantity * p.price), 2) AS total_revenue
                FROM
                    order_details o
                        JOIN
                    pizzas p ON o.pizza_id = p.pizza_id) * 100,
            2) AS revenue
FROM
    pizza_types pt
        JOIN
    pizzas p ON pt.pizza_type_id = p.pizza_type_id
        JOIN
    order_details od ON p.pizza_id = od.pizza_id
GROUP BY pt.name
ORDER BY revenue DESC;




--      12. analyze the cumulative revenue generated over time.

select order_date,sum(revenue) over(order by order_date) 
from (SELECT 
    orders.order_date,
    SUM(order_details.quantity * pizzas.price) AS revenue
FROM
    orders
        JOIN
    order_details ON orders.order_id = order_details.order_id
        JOIN
    pizzas ON order_details.pizza_id = pizzas.pizza_id
GROUP BY orders.order_date) as sales;




--    13. determine the top 3 most ordered pizza types based on revenue for each pizza category.

select category,name,rn 
from
(select category,name,
rank() over(partition by category order by revenue desc) as rn
from 
(SELECT 
    pizza_types.category,
    pizza_types.name,
    SUM(order_details.quantity * pizzas.price) AS revenue
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON pizzas.pizza_id = order_details.pizza_id
GROUP BY pizza_types.category , pizza_types.name) as a) as b
where rn<=3;

